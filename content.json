{"pages":[],"posts":[{"title":"987654321","text":"","link":"/2021/11/07/0987654321/"},{"title":"1234567889","text":"","link":"/2021/11/07/1234567889/"},{"title":"FUCK U","text":"","link":"/2021/11/07/FUCK-U/"},{"title":"HELLO WORLD HAHAHAHA","text":"","link":"/2021/11/07/HELLO-WORLD-HAHAHAHA/"},{"title":"How To Install an FTP Server On Ubuntu with vsftpd","text":"IntroductionIf you are looking to install an FTP server on Ubuntu, you can’t beat the simplicity of vsftpd . FTP stands for File Transfer Protocol. It is similar to HTTP (HyperText Transfer Protocol), in that it specifies a language for transferring data over a network. FTP is unencrypted by default, so by itself, it is not a good choice for secure transmission of data. This guide will help you install and configure an FTP server with vsftpd on Ubuntu. Prerequisites Access to a user account with sudo privileges Access to a terminal window/command line (Ctrl-Alt-T) The apt package manager, included by default Step 1: Update System PackagesStart by updating your repositories – enter the following in a terminal window:1sudo apt update The system proceeds to update the repositories. Step 2: Install vsftpd Server on UbuntuA common open-source FTP utility used in Ubuntu is vsftpd. It is recommended for its ease of use. To install vsftpd, enter the command:1sudo apt install vsftpd This is an example of the output in Ubuntu. To launch the service and enable it at startup, run the commands: 1sudo systemctl start vsftpd 1sudo systemctl enable vsftpd Step 3: Backup Configuration FilesBefore making any changes, make sure to back up your configuration files. Create a backup copy of the default configuration file by entering the following:1sudo cp /etc/vsftpd.conf /etc/vsftpd.conf_default Step 4: Create FTP UserCreate a new FTP user with the following commands:1sudo useradd -m testuser 1sudo ufw allow 21/tcp Step 6: Connect to Ubuntu FTP ServerConnect to the FTP server with the following command: 1sudo ftp ubuntu-ftp Replace ubuntu-ftp with the name of your system (taken from the command line). Log in using the testuser account and password you just set. You should now be successfully logged in to your FTP server. Configuring and Securing Ubuntu vsftpd ServerChange Default DirectoryBy default, the FTP server uses the /srv/ftp directory as the default directory. You can change this by creating a new directory and changing the FTP user home directory. To change the FTP home directory, enter the following: 1sudo mkdir /srv/ftp/new_location 1sudo usermod -d /srv/ftp/new_location ftp Restart the vsftpd service to apply the changes: 1sudo systemctl restart vsftpd.service Now, you can put any files you want to share via FTP into the /srv/ftp folder (if you left it as the default), or the /srv/ftp/new_location/ directory (if you changed it). Authenticate FTP UsersIf you want to let authenticated users upload files, edit the vsftpd.conf file by entering the following: 1sudo nano /etc/vsftpd.conf Find the entry labeled write_enable=NO, and change the value to “YES.” Save the file, exit, then restart the FTP service with the following: 1sudo systemctl restart vsftpd.service This allows the user to make changes inside their home directory. Securing FTPNumerous exploits take advantage of unsecured FTP servers. In response, there are several configuration options in vsftpd.conf that can help secure your FTP server. Limit User AccessOne method is to limit users to their home directory. Open vsftpd.conf in an editor and uncomment the following command: 1chroot_local_user=YES This is an example of the file in nano: Create a User List FileTo create a list file, edit /etc/vsftpd.chroot_list, and add one user per line. Instruct your FTP server to limit this list of users to their own home directories by editing vsftpd.conf: 1chroot_local_user=YES 1chroot_list_file=/etc/vsftpd.chroot_list The image ilustrates the edits that were made:Restart the vsftpd service: 1sudo systemctl restart vsftpd.service By default, the list of blocked users from FTP access is stored in /etc/ftpusers. To add blocked users, edit this file and add one user per line. Encrypt Traffic With FTPSAnother method to secure your FTP server is to encrypt the traffic. This is done by using FTPS – File Transfer Protocol over SSL (Secure Socket Layer). For this to work, users need to be set up with a shell account on the FTP server. This will add a layer of secure encryption to your FTP traffic. Start by creating a new certificate with openssl. To do so, run the command: 1sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/vsftpd.pem -out /etc/ssl/private/vsftpd.pem Provide the required information when prompted or keep the default configuration by pressing Enter. Next, open your vsftpd.conf file in an editor and change the line ssl_enable=NO to ssl_enable=YES: 1ssl_enable=YES Then, add the following lines: 123456789101112rsa_cert_file=/etc/ssl/private/vsftpd.pemrsa_private_key_file=/etc/ssl/private/vsftpd.pemallow_anon_ssl=NOforce_local_data_ssl=YESforce_local_logins_ssl=YESssl_tlsv1=YESssl_sslv2=NOssl_sslv3=NOrequire_ssl_reuse=NOssl_ciphers=HIGHpasv_min_port=40000pasv_max_port=50000 Save the changes and exit the file. Finally, restart the service to apply the changes: 1sudo systemctl restart vsftpd.service Note: For more information on SSL configurations and certificates, please see the Ubuntu FTP server documentation. Also, it’s worth noting that FTPS is a different protocol that SFTP. SFTP stands for Secure File Transfer Protocol, and it’s an entirely different protocol. ConclusionNow, you should have installed an FTP server on Ubuntu with vsftpd. You should now be able to configure your user lists and accounts, and connect to your new FTP server. We also detailed the risks of the FTP protocol, and how to mitigate them.","link":"/2021/11/07/How-To-Install-an-FTP-Server-On-Ubuntu-with-vsftpd/"},{"title":"I AM SINMEI","text":"","link":"/2021/11/07/I-AM-SINMEI/"},{"title":"My New Post","text":"","link":"/2021/11/07/My-New-Post/"},{"title":"THIS IS A TEST","text":"","link":"/2021/11/07/THIS-IS-A-TEST/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2021/11/07/hello-world/"}],"tags":[],"categories":[]}